/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';

/**
 * 
 * @export
 * @interface Person
 */
export interface Person {
    /**
     * 
     * @type {number}
     * @memberof Person
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    phoneNumber?: string;
    /**
     * 
     * @type {Address}
     * @memberof Person
     */
    mailingAddress?: Address;
    /**
     * 
     * @type {Address}
     * @memberof Person
     */
    physicalAddress?: Address;
}

/**
 * Check if a given object implements the Person interface.
 */
export function instanceOfPerson(value: object): value is Person {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function PersonFromJSON(json: any): Person {
    return PersonFromJSONTyped(json, false);
}

export function PersonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Person {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'mailingAddress': json['mailingAddress'] == null ? undefined : AddressFromJSON(json['mailingAddress']),
        'physicalAddress': json['physicalAddress'] == null ? undefined : AddressFromJSON(json['physicalAddress']),
    };
}

export function PersonToJSON(json: any): Person {
    return PersonToJSONTyped(json, false);
}

export function PersonToJSONTyped(value?: Person | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'phoneNumber': value['phoneNumber'],
        'mailingAddress': AddressToJSON(value['mailingAddress']),
        'physicalAddress': AddressToJSON(value['physicalAddress']),
    };
}

