plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.openapi.generator" version "7.12.0"
}

group = 'com.illizen.tutorials'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		vendor = JvmVendorSpec.AMAZON
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// TODO: add back once we begin looking at session affinity
	// implementation 'org.springframework.session:spring-session-core'

	// security dependencies
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// development dependencies
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	// TODO: add back once we being docker/k8s deployment
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// persistence dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.postgresql:postgresql'

	// testing dependencies
	// testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	// testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// tasks.named('test') {
// 	useJUnitPlatform()
// }

// UI Tasks
tasks.register('copyWebApp', Copy) {
	group = 'build'
	description = 'Copy the frontend web app to the build directory'
	dependsOn ':frontend:npmBuild'
	
	from("${rootDir}/frontend/dist")
	into("$buildDir/resources/main/static")
}
compileJava.dependsOn copyWebApp
processResources.dependsOn copyWebApp

// Open API Tasks
// See: https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-gradle-plugin/README.adoc
// Probably swap this for https://rehmat-sayany.medium.com/enhancing-type-safety-and-validation-with-zod-use-cases-openapi-integration-and-comparison-with-53ed009c85c6
// Tutorial with more info here: https://rehmat-sayany.medium.com/enhancing-type-safety-and-validation-with-zod-use-cases-openapi-integration-and-comparison-with-53ed009c85c6
openApiGenerate {
	generatorName.set('typescript-fetch')
	inputSpec.set("$projectDir/sample-crm-api.json")
	outputDir.set("$buildDir/generated/openapi/client/typescript")
	// apiPackage.set("com.illizen.tutorials.api")
	// modelPackage.set("com.illizen.tutorials.model")
	// configOptions.putAll(
	// 	"dateLibrary" to "java8",
	// 	"interfaceOnly" to "true",
	// 	"skipDefaultInterface" to "true",
	// 	"basePackage" to "com.illizen.tutorials"
	// )
}
compileJava.dependsOn tasks.openApiGenerate